<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by Daniel Vera Gilliard]]></title><description><![CDATA[Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.]]></description><link>https://daniel-vera-g.github.io</link><generator>RSS for Node</generator><lastBuildDate>Sat, 18 May 2019 14:25:22 GMT</lastBuildDate><item><title><![CDATA[New Blog]]></title><description><![CDATA[A short description of this new blog.]]></description><link>https://daniel-vera-g.github.io/posts/new-blog/</link><guid isPermaLink="false">https://daniel-vera-g.github.io/posts/new-blog/</guid><pubDate>Fri, 17 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;After going over some different versions of this blog written with plain HTML, CSS(Using Bootstrap) and Javascript I decided to go for a static site generator. The main reasons for this were more ease of use, maintainability and scalability.&lt;br&gt;
After researching a bit I went with &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;GatsbyJS&lt;/a&gt; over other great alternatives like Hugo or Jeykill.  &lt;/p&gt;
&lt;p&gt;The reasons for this were clear:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gatsby is written in Javascript, that means no new language like Go(Hugo) or Ruby(Jeykill)&lt;/li&gt;
&lt;li&gt;Gatsby uses React and GraphQL, which are very interesting technologies I want to learn more about.&lt;/li&gt;
&lt;li&gt;You can use Markdown to write blog posts and customize the website, which is great.&lt;/li&gt;
&lt;li&gt;The community is very helpful and there are a lot of great themes as well as plugins to use.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I went with the &lt;a href=&quot;https://github.com/alxshelepenok/gatsby-starter-lumen&quot;&gt;Gatsby starter Lumen&lt;/a&gt; theme, because of its simplicity and active development.&lt;/p&gt;
&lt;h2 id=&quot;workflow&quot;&gt;&lt;a href=&quot;#workflow&quot; aria-label=&quot;workflow permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workflow&lt;/h2&gt;
&lt;p&gt;After some changes, now my workflow is pretty simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write a blog post&lt;/li&gt;
&lt;li&gt;Push it to GitHub&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The only hurdle to publishing a post straight after pushing it to GitHub was Gatsby. Github pages need an &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; file at the root and Gatsby builds the page into a subfolder(&lt;code class=&quot;language-text&quot;&gt;public&lt;/code&gt;).&lt;br&gt;
Some solutions, push the build into a &lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt; branch, which is rather inconvenient because user pages must be built from the master branch.
Taking this into account, my solution was the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write posts or edit the page on the &lt;code class=&quot;language-text&quot;&gt;develop&lt;/code&gt; branch or other branches.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://github.com/daniel-vera-g/daniel-vera-g.github.io/blob/develop/.travis.yml&quot;&gt;Travis&lt;/a&gt; to execute a &lt;a href=&quot;https://github.com/daniel-vera-g/daniel-vera-g.github.io/blob/develop/scripts/deploy-to-gh-pages.sh&quot;&gt;script&lt;/a&gt; after &lt;code class=&quot;language-text&quot;&gt;pushing&lt;/code&gt; changes to origin, which updates the master branch with the output of the &lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt; command.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a href=&quot;#summary&quot; aria-label=&quot;summary permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;To round up, Gatsby gives me a simple way to rapidly set up a great blog, which scales well in the future and looks nice.  As next steps, I will probably add a dark theme and some features like searching by tags or keywords.  Maybe in the future, I will consider changing to a plain HTML and CSS based site, as I find minimalistic sites like the one of &lt;a href=&quot;https://patrickcollison.com/about&quot;&gt;Patrick Collison&lt;/a&gt; or &lt;a href=&quot;https://jrl.ninja/&quot;&gt;this one&lt;/a&gt; pretty nice.&lt;/p&gt;</content:encoded></item></channel></rss>